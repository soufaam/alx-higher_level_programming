The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an 0-add_integer.txt text file in reStructuredText format.  First import
``add_integer`` from the ``exa0-add_integer`` module:
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(30, 40)
70
>>> add_integer(0 , 0)
0
>>> add_integer(30.1, 23.4)
53
>>> add_integer(30.0, )
128
>>> add_integer(None, None)
Traceback (most recent call last):
        ...
TypeError: a must be an integer
>>> add_integer("None")
Traceback (most recent call last):
        ...
TypeError: a must be an integer
>>> add_integer(12, "None")
Traceback (most recent call last):
        ...
TypeError: b must be an integer
>>> add_integer()
Traceback (most recent call last):
        ...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(1.3407807929942597e+154**2, 12)
Traceback (most recent call last):
        ...
OverflowError: (34, 'Numerical result out of range')
